name: release image-optimizer

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install stable rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          default: true
          override: true
      - name: Create Release
        if: matrix.platform == 'ubuntu-latest'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Rust check
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
      - name: Rust build for Linux
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/image-optimizer
          asset_name: image-optimizer-macos
          asset_content_type: application/exe
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/image-optimizer
          asset_name: image-optimizer-linux
          asset_content_type: application/exe
      - name: Upload Release Windows Asset
        if: matrix.platform == 'ubuntu-latest'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/image-optimizer
          asset_name: image-optimizer.exe
          asset_content_type: application/exe